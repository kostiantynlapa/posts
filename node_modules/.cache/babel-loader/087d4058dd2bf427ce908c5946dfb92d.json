{"ast":null,"code":"var _jsxFileName = \"D:\\\\posts\\\\posts\\\\src\\\\Components\\\\PostList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Post from \"./post\";\nimport PostForm from \"./PostForm\";\nimport Filter from \"./Filter\";\nimport MyModal from \"../UI/MyModal/MyModal\";\nimport MyButton from \"../UI/buttons/MyButton\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { usePosts } from \"../hooks/usePosts\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../UI/Loader/Loader\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = props => {\n  _s();\n\n  let [posts, setPosts] = useState([]);\n  let [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  let [visible, setVisible] = useState(false);\n  let [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const posts = await PostService.getAll();\n    setPosts(posts);\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, []); // let sortedPosts = useSortedPosts(posts, filter.sort);\n\n  let sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  function createPost(newPost) {\n    setPosts([...posts, newPost]);\n    setVisible(false);\n  }\n\n  function deletePost(post) {\n    setPosts(posts.filter(p => p.id !== post.id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: fetchPosts,\n      children: \"get posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: 30,\n        marginBottom: 30\n      },\n      onClick: () => setVisible(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: visible,\n      setVisible: setVisible,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '50px',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 95\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: sortedAndSearchedPosts.map(post => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"post\",\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          deletePost: deletePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)\n      }, post.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"SP9M/2s1aJCocdPJVTF4HZhg+dg=\", false, function () {\n  return [useFetching, usePosts];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["D:/posts/posts/src/Components/PostList.jsx"],"names":["React","useEffect","useState","Post","PostForm","Filter","MyModal","MyButton","CSSTransition","TransitionGroup","usePosts","PostService","Loader","useFetching","PostList","props","posts","setPosts","filter","setFilter","sort","query","visible","setVisible","fetchPosts","isPostsLoading","postError","getAll","sortedAndSearchedPosts","createPost","newPost","deletePost","post","p","id","marginTop","marginBottom","title","margin","display","justifyContent","map","key"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Post from \"./post\";\r\nimport PostForm from \"./PostForm\";\r\nimport Filter from \"./Filter\";\r\nimport MyModal from \"../UI/MyModal/MyModal\";\r\nimport MyButton from \"../UI/buttons/MyButton\";\r\nimport {\r\n    CSSTransition,\r\n    TransitionGroup,\r\n} from 'react-transition-group';\r\nimport {usePosts} from \"../hooks/usePosts\";\r\nimport PostService from \"../API/PostService\";\r\nimport Loader from \"../UI/Loader/Loader\";\r\nimport {useFetching} from \"../hooks/useFetching\";\r\n\r\nconst PostList = (props) => {\r\n    let [posts, setPosts] = useState([]);\r\n    let [filter, setFilter] = useState({sort: '', query: ''})\r\n    let [visible, setVisible] = useState(false);\r\n    let [fetchPosts, isPostsLoading, postError] = useFetching(async () =>{\r\n        const posts = await PostService.getAll();\r\n        setPosts(posts);\r\n    })\r\n\r\n    useEffect(() =>{\r\n        fetchPosts();\r\n    }, [])\r\n\r\n    // let sortedPosts = useSortedPosts(posts, filter.sort);\r\n    let sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\r\n\r\n\r\n\r\n\r\n    function createPost(newPost){\r\n        setPosts([...posts, newPost]);\r\n        setVisible(false)\r\n    }\r\n    function deletePost(post){\r\n        setPosts(posts.filter(p => p.id !== post.id));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <MyButton onClick={fetchPosts}>get posts</MyButton>\r\n            <MyButton style={{marginTop: 30, marginBottom: 30}} onClick={() => setVisible(true)}>Создать пост</MyButton>\r\n\r\n            <MyModal visible = {visible} setVisible={setVisible}>\r\n                <PostForm create = {createPost}/>\r\n            </MyModal>\r\n            <h1>{props.title}</h1>\r\n            <hr style={{margin: '20px 0'}}/>\r\n            <Filter filter = {filter} setFilter={setFilter} />\r\n            {isPostsLoading\r\n                ? <div style={{marginTop: '50px', display: 'flex', justifyContent: 'center'}}><Loader/></div>\r\n            : <TransitionGroup>\r\n                    {sortedAndSearchedPosts.map(post =>\r\n                        <CSSTransition\r\n                            key={post.key}\r\n                            timeout={500}\r\n                            classNames=\"post\">\r\n                            <Post post = {post} deletePost = {deletePost}/>\r\n                        </CSSTransition>)}\r\n                </TransitionGroup>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;"]},"metadata":{},"sourceType":"module"}