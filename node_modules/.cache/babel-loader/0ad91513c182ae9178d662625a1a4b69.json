{"ast":null,"code":"var _jsxFileName = \"D:\\\\posts\\\\posts\\\\src\\\\Components\\\\PostList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport Post from \"./post\";\nimport PostForm from \"./PostForm\";\nimport Filter from \"./Filter\";\nimport MyModal from \"../UI/MyModal/MyModal\";\nimport MyButton from \"../UI/buttons/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = props => {\n  _s();\n\n  let [posts, setPosts] = useState([]);\n  let [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  let [visible, setVisible] = useState(false);\n  let sortedPosts = useMemo(() => {\n    if (filter.sort) {\n      return [...posts].sort((a, b) => a[filter.sort].localeCompare(b[filter.sort]));\n    }\n\n    return posts;\n  }, [filter.sort, posts]);\n  let sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(filter.query.toLowerCase()));\n  }, [filter.query, posts]);\n\n  function createPost(newPost) {\n    setPosts([...posts, newPost]);\n  }\n\n  function deletePost(post) {\n    setPosts(posts.filter(p => p.id !== post.id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      visible: visible,\n      setVisible: setVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), sortedAndSearchedPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u043E\\u0441\\u0442\\u043E\\u0432 \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : sortedAndSearchedPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      title: post.title,\n      description: post.body,\n      id: post.id,\n      deletePost: deletePost\n    }, post.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 52\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"WPYOJ7c6zHl/MRa+uJhxqLWbclo=\");\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["D:/posts/posts/src/Components/PostList.jsx"],"names":["React","useMemo","useState","Post","PostForm","Filter","MyModal","MyButton","PostList","props","posts","setPosts","filter","setFilter","sort","query","visible","setVisible","sortedPosts","a","b","localeCompare","sortedAndSearchedPosts","post","title","toLowerCase","includes","createPost","newPost","deletePost","p","id","margin","length","map","body","key"],"mappings":"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","sourcesContent":["import React, {useMemo, useState} from 'react';\r\nimport Post from \"./post\";\r\nimport PostForm from \"./PostForm\";\r\nimport Filter from \"./Filter\";\r\nimport MyModal from \"../UI/MyModal/MyModal\";\r\nimport MyButton from \"../UI/buttons/MyButton\";\r\n\r\nconst PostList = (props) => {\r\n    let [posts, setPosts] = useState([]);\r\n    let [filter, setFilter] = useState({sort: '', query: ''})\r\n    let [visible, setVisible] = useState(false);\r\n\r\n\r\n\r\n    let sortedPosts = useMemo(() => {\r\n        if(filter.sort){\r\n            return [...posts].sort((a, b) => a[filter.sort].localeCompare(b[filter.sort]))\r\n        }\r\n        return posts;\r\n    }, [filter.sort, posts]);\r\n\r\n    let sortedAndSearchedPosts = useMemo(() => {\r\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(filter.query.toLowerCase()));\r\n    }, [filter.query, posts])\r\n\r\n    function createPost(newPost){\r\n        setPosts([...posts, newPost]);\r\n    }\r\n    function deletePost(post){\r\n        setPosts(posts.filter(p => p.id !== post.id));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MyButton visible = {visible} setVisible={setVisible}/>\r\n\r\n            <MyModal >\r\n                <PostForm create = {createPost}/>\r\n            </MyModal>\r\n            <h1>{props.title}</h1>\r\n            <hr style={{margin: '20px 0'}}/>\r\n            <Filter filter = {filter} setFilter={setFilter} />\r\n            {(sortedAndSearchedPosts.length === 0) ?\r\n                <h1>Постов нет</h1>\r\n                :\r\n                sortedAndSearchedPosts.map(post => <Post title={post.title} description={post.body} id={post.id} key={post.key} deletePost = {deletePost}/>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;"]},"metadata":{},"sourceType":"module"}