{"ast":null,"code":"var _jsxFileName = \"D:\\\\posts\\\\posts\\\\src\\\\Components\\\\PostList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport Post from \"./post\";\nimport PostForm from \"./PostForm\";\nimport MySelect from \"../UI/selects/MySelect\";\nimport MyInput from \"../UI/inputs/MyInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = props => {\n  _s();\n\n  let [posts, setPosts] = useState([]);\n  let [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  let sortedPosts = useMemo(() => {\n    if (filter.sort) {\n      return [...posts].sort((a, b) => a[filter.sort].localeCompare(b[filter.sort]));\n    }\n\n    return posts;\n  }, [filter.sort, posts]);\n  let sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(filter.query.toLowerCase()));\n  });\n\n  function createPost(newPost) {\n    setPosts([...posts, newPost]);\n  }\n\n  function deletePost(post) {\n    setPosts(posts.filter(p => p.id !== post.id));\n  }\n\n  function sortPosts(sort) {\n    setFilter([...filter], sort);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: searchQuery,\n      onChange: el => setFilter([...filter], el.target.value),\n      placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\",\n      value: selectedSort,\n      onChange: sortPosts,\n      options: [{\n        value: 'title',\n        name: 'Заголовок'\n      }, {\n        value: 'body',\n        name: 'Описание'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), sortedAndSearchedPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u043E\\u0441\\u0442\\u043E\\u0432 \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : sortedAndSearchedPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      title: post.title,\n      description: post.body,\n      id: post.id,\n      deletePost: deletePost\n    }, post.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 52\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"cSCbH4wof36t00PpbN3pORXMT9I=\");\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["D:/posts/posts/src/Components/PostList.jsx"],"names":["React","useMemo","useState","Post","PostForm","MySelect","MyInput","PostList","props","posts","setPosts","filter","setFilter","sort","query","sortedPosts","a","b","localeCompare","sortedAndSearchedPosts","post","title","toLowerCase","includes","createPost","newPost","deletePost","p","id","sortPosts","margin","searchQuery","el","target","value","selectedSort","name","length","map","body","key"],"mappings":"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","sourcesContent":["import React, {useMemo, useState} from 'react';\r\nimport Post from \"./post\";\r\nimport PostForm from \"./PostForm\";\r\nimport MySelect from \"../UI/selects/MySelect\";\r\nimport MyInput from \"../UI/inputs/MyInput\";\r\n\r\nconst PostList = (props) => {\r\n    let [posts, setPosts] = useState([]);\r\n    let [filter, setFilter] = useState({sort: '', query: ''})\r\n\r\n\r\n\r\n\r\n    let sortedPosts = useMemo(() => {\r\n        if(filter.sort){\r\n            return [...posts].sort((a, b) => a[filter.sort].localeCompare(b[filter.sort]))\r\n        }\r\n        return posts;\r\n    }, [filter.sort, posts]);\r\n\r\n    let sortedAndSearchedPosts = useMemo(() => {\r\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(filter.query.toLowerCase()));\r\n    })\r\n\r\n    function createPost(newPost){\r\n        setPosts([...posts, newPost]);\r\n    }\r\n    function deletePost(post){\r\n        setPosts(posts.filter(p => p.id !== post.id));\r\n    }\r\n\r\n    function sortPosts(sort){\r\n        setFilter([...filter], sort);\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>{props.title}</h1>\r\n            <PostForm create = {createPost}/>\r\n            <hr style={{margin: '20px 0'}}/>\r\n            <MyInput\r\n                value={searchQuery}\r\n                onChange={el => setFilter([...filter], el.target.value)}\r\n                placeholder='Поиск'\r\n            />\r\n            <MySelect defaultValue='Сортировка'\r\n            value={selectedSort}\r\n            onChange={sortPosts}\r\n            options = {[{\r\n                value: 'title', name: 'Заголовок'\r\n            }, {\r\n                value: 'body', name: 'Описание'\r\n            }]}\r\n            />\r\n            {(sortedAndSearchedPosts.length === 0) ?\r\n                <h1>Постов нет</h1>\r\n                :\r\n                sortedAndSearchedPosts.map(post => <Post title={post.title} description={post.body} id={post.id} key={post.key} deletePost = {deletePost}/>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;"]},"metadata":{},"sourceType":"module"}