{"ast":null,"code":"var _jsxFileName = \"D:\\\\posts\\\\posts\\\\src\\\\Components\\\\PostList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport Post from \"./post\";\nimport PostForm from \"./PostForm\";\nimport Filter from \"./Filter\";\nimport MyModal from \"../UI/MyModal/MyModal\";\nimport MyButton from \"../UI/buttons/MyButton\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { usePosts, useSortedPosts } from \"../hooks/usePosts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = props => {\n  _s();\n\n  let [posts, setPosts] = useState([]);\n  let [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  let [visible, setVisible] = useState(false);\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  let sortedPosts = useSortedPosts(posts, filter.sort);\n  let sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  async function fetchPosts() {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts');\n    setPosts(response.data);\n  }\n\n  function createPost(newPost) {\n    setPosts([...posts, newPost]);\n    setVisible(false);\n  }\n\n  function deletePost(post) {\n    setPosts(posts.filter(p => p.id !== post.id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: fetchPosts,\n      children: \"get posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: 30,\n        marginBottom: 30\n      },\n      onClick: () => setVisible(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: visible,\n      setVisible: setVisible,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: sortedAndSearchedPosts.map(post => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"post\",\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          deletePost: deletePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, post.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"owiJWyF3ase7I8lx7GhTtIWyAhw=\", false, function () {\n  return [useSortedPosts, usePosts];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["D:/posts/posts/src/Components/PostList.jsx"],"names":["React","useEffect","useMemo","useState","Post","PostForm","Filter","MyModal","MyButton","CSSTransition","TransitionGroup","usePosts","useSortedPosts","axios","PostList","props","posts","setPosts","filter","setFilter","sort","query","visible","setVisible","fetchPosts","sortedPosts","sortedAndSearchedPosts","response","get","data","createPost","newPost","deletePost","post","p","id","marginTop","marginBottom","title","margin","map","key"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\r\nimport Post from \"./post\";\r\nimport PostForm from \"./PostForm\";\r\nimport Filter from \"./Filter\";\r\nimport MyModal from \"../UI/MyModal/MyModal\";\r\nimport MyButton from \"../UI/buttons/MyButton\";\r\nimport {\r\n    CSSTransition,\r\n    TransitionGroup,\r\n} from 'react-transition-group';\r\nimport {usePosts, useSortedPosts} from \"../hooks/usePosts\";\r\nimport axios from \"axios\";\r\n\r\nconst PostList = (props) => {\r\n    let [posts, setPosts] = useState([]);\r\n    let [filter, setFilter] = useState({sort: '', query: ''})\r\n    let [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() =>{\r\n        fetchPosts();\r\n    }, [])\r\n\r\n    let sortedPosts = useSortedPosts(posts, filter.sort);\r\n    let sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\r\n\r\n\r\n\r\n    async function fetchPosts(){\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts');\r\n        setPosts(response.data);\r\n    }\r\n\r\n    function createPost(newPost){\r\n        setPosts([...posts, newPost]);\r\n        setVisible(false)\r\n    }\r\n    function deletePost(post){\r\n        setPosts(posts.filter(p => p.id !== post.id));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <MyButton onClick={fetchPosts}>get posts</MyButton>\r\n            <MyButton style={{marginTop: 30, marginBottom: 30}} onClick={() => setVisible(true)}>Создать пост</MyButton>\r\n\r\n            <MyModal visible = {visible} setVisible={setVisible}>\r\n                <PostForm create = {createPost}/>\r\n            </MyModal>\r\n            <h1>{props.title}</h1>\r\n            <hr style={{margin: '20px 0'}}/>\r\n            <Filter filter = {filter} setFilter={setFilter} />\r\n\r\n            <TransitionGroup>\r\n                {sortedAndSearchedPosts.map(post =>\r\n                    <CSSTransition\r\n                        key={post.key}\r\n                        timeout={500}\r\n                        classNames=\"post\">\r\n                        <Post post = {post}  deletePost = {deletePost}/>\r\n                    </CSSTransition>)}\r\n            </TransitionGroup>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;"]},"metadata":{},"sourceType":"module"}